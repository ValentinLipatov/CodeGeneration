<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Xml" #>
<#@ import namespace="System.Xml" #>
using System;

/// <summary>
/// Auto-generated code
/// </summary>
namespace CodeGeneration
{
<#

XmlDocument doc = new XmlDocument();
doc.Load(this.Host.ResolvePath("..\\..\\BusinessObjects.xml"));

var first = true;
foreach (XmlNode classNode in doc.SelectNodes("//Class"))
{
	if (first)
	{
		first = false;
	}
	else
	{
		#><#= Environment.NewLine #><#
	}
	
	var className = classNode.Attributes["Name"].Value.ToString();
	var baseClassName = classNode.Attributes["BaseClassName"]?.Value?.ToString() ?? "Object";
	var classCaption = classNode.Attributes["Caption"]?.Value?.ToString();

	if (!string.IsNullOrEmpty(classCaption))
	{
		#>	/// <summary><#= Environment.NewLine #><#
		#>	/// <#= classCaption #><#= Environment.NewLine #><#
		#>	/// </summary><#= Environment.NewLine #><#
	}

	#>	public interface I<#= className #> : I<#= baseClassName #><#= Environment.NewLine #>	{<#= Environment.NewLine #><#

	var firstProperty = true;
	foreach (XmlNode propertyNode in classNode.SelectNodes("//Property"))
	{
		if (propertyNode.ParentNode == classNode)
		{
			if (firstProperty)
			{
				firstProperty = false;
			}
			else
			{
				#><#= Environment.NewLine #><#
			}

			var type = propertyNode.Attributes["Type"].Value.ToString();
			var propertyName = propertyNode.Attributes["Name"].Value.ToString();
			var propertyCaption = propertyNode.Attributes["Caption"]?.Value?.ToString();
			
			if (!string.IsNullOrEmpty(propertyCaption))
			{
				#>		/// <summary><#= Environment.NewLine #><#
				#>		/// <#= propertyCaption #><#= Environment.NewLine #><#
				#>		/// </summary><#= Environment.NewLine #><#
			}

			#>		<#= type #> <#= propertyName #> { get; set; }<#= Environment.NewLine #><#
		}
	}

	#>	}<#= Environment.NewLine #><#
}

#>}